---
title: "Sample Project"
subtitle: "MKTG - LEE"
execute: 
  echo: true
  eval: true
format:
  html:
    code-fold: false
    self-contained: true
jupyter: python3
---


# Executive Summary

# Introduction & Data Set Used

- We study the automobile industry because ...
- The data set we analyze comes from ..., and the files can be accessed through [Kaggle](https://kaggle.com)




# Data Preprocessing and Exploratory Data Analysis

- We explore the data set by visualizing the main variables of interest...

```{python}
# load required packages
import polars as pl
import plotly.express as px

# Load data
df = pl.read_csv("https://raw.githubusercontent.com/VroomVroomMKTG6234/repo/refs/heads/main/car_prices.csv")

# View the first few rows of the data
df.head()

```


- First, we examine the distribution of 'sellingprice' by plotting a histogram.

```{python}

px.histogram(df, x = 'sellingprice')


```


From the histogram, it looks like the range of the avg_distance traveled is mostly between 200 and 800 mpg.

```{python}
num_columns = df.width
print("Number of variables:", num_columns)
```
#In this dataset, we have 16 columns

```{python}
for col in df.columns:
    unique_count = df[col].n_unique()
    print(f"{col}: {unique_count} unique values")
```
#Determining how many different categories are in each column

```{python}
aggregations = []
for col in df.columns:
    if df.schema[col] in [pl.Float64, pl.Float32, pl.Int64, pl.Int32]:
        aggregations.extend([
            pl.col(col).mean().alias(f"{col}_mean"),
            pl.col(col).median().alias(f"{col}_median"),
            pl.col(col).var().alias(f"{col}_variance"),
            pl.col(col).std().alias(f"{col}_std")
        ])
summary_stats = df.select(aggregations)
print(summary_stats)
#summary statistics for only numeric columns
```

```{python}
px.histogram(
  df,
  x = "odometer"
)
px.histogram(
  df,
  x ="condition"
)
px.histogram(
  df,
  x ="sellingprice"
)
px.histogram(
  df,
  x = "mmr"
)    
#plotting of each numerical variable using a histogram, seperate out code to run, just have them all together for organization
```

```{python}
px.bar(
  df,
  x = "body",
  y = "sellingprice"
)
#plotting of each categorical variable using a bar chart, still need to add more!
```

- Second, we examine some summary statistics of the avg_distance variable:

```{python}
#| echo: false

# This will only show the results but not the code, because 'echo' is set to false
email.select(
  pl.col("avg_distance").mean().alias("mean_avg_distance"),
  pl.col("avg_distance").max().alias("max_avg_distance"),
  pl.col("avg_distance").min().alias("min_avg_distance"),
)

```


# Model-Based Analysis

We use XXX model to investigate the data set.


## Customer Segmentation

## Targeting

## Binary Outcome Prediction

## Continuous Outcome Prediction

## RFM Analysis

## ROMI Analysis

# Results and Findings

# Research Implications
## Managerical Recommendations
1.
2.
3.

## Actionable Plans
1.
2.
3.

# Conclusion

## Works Cited